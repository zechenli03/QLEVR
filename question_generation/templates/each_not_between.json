[
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, no <st>s except the <Z> <C> <M> <S><so> are <Z2> <C2> <M2> <S2><sn>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, every <st> except the <Z> <C> <M> <S><so> is not <se> <Z2> <C2> <M2> <S2>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>", "<Z2>", "<C2>", "<M2>", "<S2>", "<so>", "<se>", "<sn>", "<st>"], "type": "attributes_subset_no_except", "kind": "object"},
        {"input_states": [3], "type": "no_except", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "no_except"],
      "type": ["existence1"]
  },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, no <st>s except the <Z> <C> <M> <S><so> are <Z2> <C2> <M2> <S2><sn>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, every <st> except the <Z> <C> <M> <S><so> is not <se> <Z2> <C2> <M2> <S2>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>", "<Z2>", "<C2>", "<M2>", "<S2>", "<so>", "<se>", "<sn>", "<st>"], "type": "attributes_subset_no_except", "kind": "object"},
        {"input_states": [3], "type": "no_except", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "no_except"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, every <st> except the <Z> <C> <M> <S><so> is <se> <Z2> <C2> <M2> <S2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, no <st>s except the <Z> <C> <M> <S><so> are not <Z2> <C2> <M2> <S2><sn>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>", "<Z2>", "<C2>", "<M2>", "<S2>", "<so>", "<se>", "<sn>", "<st>"], "type": "attributes_subset_every_except", "kind": "object"},
        {"input_states": [3], "type": "every_except", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "every_except"],
      "type": ["existence1"]
  },
      {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, every <st> except the <Z> <C> <M> <S><so> is <se> <Z2> <C2> <M2> <S2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, no <st>s except the <Z> <C> <M> <S><so> are not <Z2> <C2> <M2> <S2><sn>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>", "<Z2>", "<C2>", "<M2>", "<S2>", "<so>", "<se>", "<sn>", "<st>"], "type": "attributes_subset_every_except", "kind": "object"},
        {"input_states": [3], "type": "every_except", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "every_except"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Whether all the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "Every <Z> <C> <M> <S> is on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that some <Z> <C> <M> <S> is not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "No <Z> <C> <M> <S> is not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 3], "type": "whether_all", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "all"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Whether all the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "Every <Z> <C> <M> <S> is on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that some <Z> <C> <M> <S> is not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "No <Z> <C> <M> <S> is not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 3], "type": "whether_all", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "all"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "It is not the case that all the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that no <Z> <C> <M> <S> is not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "Some <Z> <C> <M> <S> is not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that every <Z> <C> <M> <S> is on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_not_all", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 4], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "not_all"],
      "type": ["existence1"]
  },
    {
      "text": [
        "It is not the case that all the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that no <Z> <C> <M> <S> is not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "Some <Z> <C> <M> <S> is not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that every <Z> <C> <M> <S> is on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_not_all", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 4], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "not_all"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Is there any <Z> <C> <M> <S> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "Some <Z> <C> <M> <S> is on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that all the <Z> <C> <M> <S>s are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that no <Z> <C> <M> <S> is on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_some", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "some"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Is there any <Z> <C> <M> <S> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "Some <Z> <C> <M> <S> is on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that all the <Z> <C> <M> <S>s are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that no <Z> <C> <M> <S> is on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_some", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "some"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "There is no <Z> <C> <M> <S> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "No <Z> <C> <M> <S> is on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It's not the case that some <Z> <C> <M> <S> is on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "All the <Z> <C> <M> <S>s are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_no", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "no"],
      "type": ["existence1"]
  },
    {
      "text": [
        "There is no <Z> <C> <M> <S> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "No <Z> <C> <M> <S> is on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It's not the case that some <Z> <C> <M> <S> is on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "All the <Z> <C> <M> <S>s are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_no", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "no"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Some but not all of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "Whether some but not all of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_some_but_not_all", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 4], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "some_but_not_all"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Some but not all of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "Whether some but not all of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple_valid", "kind": "object"},
        {"input_states": [2, 4], "type": "whether_some_but_not_all", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 4], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "some_but_not_all"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "<sa> there at most <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "It is not the case that more than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "All the <Z> <C> <M> <S>s but at most <OC> are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "At most <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_at_most_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "at_most_number"],
      "type": ["existence1"]
  },
    {
      "text": [
        "<sa> there at most <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "It is not the case that more than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "All the <Z> <C> <M> <S>s but at most <OC> are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "At most <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_at_most_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "at_most_number"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "<sa> there at least <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "It is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "All the <Z> <C> <M> <S>s but at least <OC> are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "At least <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_at_least_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "at_least_number"],
      "type": ["existence1"]
  },
    {
      "text": [
        "<sa> there at least <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "It is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "All the <Z> <C> <M> <S>s but at least <OC> are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "At least <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_at_least_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "at_least_number"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "<sa> there more than <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "It is not the case that at most <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that all the <Z> <C> <M> <S>s but at most <OC> are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "More than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_more_than_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "more_than_number"],
      "type": ["existence1"]
  },
    {
      "text": [
        "<sa> there more than <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "It is not the case that at most <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that all the <Z> <C> <M> <S>s but at most <OC> are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "More than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_more_than_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "more_than_number"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "<sa> there fewer than <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "It is not the case that at least <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that all the <Z> <C> <M> <S>s but at least <OC> are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "Fewer than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_fewer_than_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "fewer_than_number"],
      "type": ["existence1"]
  },
    {
      "text": [
        "<sa> there fewer than <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "It is not the case that at least <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that all the <Z> <C> <M> <S>s but at least <OC> are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "Fewer than <OC> <Z> <C> <M> <S><so> <sa> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_fewer_than_number", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "fewer_than_number"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "<sa> there exactly <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "There <sa> exactly <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "All the <Z> <C> <M> <S>s but <OC> are not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_exact", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "exactly_number"],
      "type": ["existence1"]
  },
    {
      "text": [
        "<sa> there exactly <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "There <sa> exactly <OC> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "All the <Z> <C> <M> <S>s but <OC> are not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_exact", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "exactly_number"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "<sa> there between <OC> and <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "There <sa> between <OC> and <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "<sa> there <OC> to <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "There <sa> at least <OC> and at most <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<OC2>", "<so>", "<sa>"], "type": "whether_between", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "between"],
      "type": ["existence1"]
  },
    {
      "text": [
        "<sa> there between <OC> and <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "There <sa> between <OC> and <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "<sa> there <OC> to <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "There <sa> at least <OC> and at most <OC2> <Z> <C> <M> <S><so> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<OC2>", "<so>", "<sa>"], "type": "whether_between", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "between"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are all the <Z> <C> <M> <S>s but at most <OC> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "It is not the case that more than <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "All the <Z> <C> <M> <S>s but at most <OC> are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "At most <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_but_most", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "all_but_at_most"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are all the <Z> <C> <M> <S>s but at most <OC> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "It is not the case that more than <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "All the <Z> <C> <M> <S>s but at most <OC> are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "At most <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_but_most", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "all_but_at_most"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are all the <Z> <C> <M> <S>s but at least <OC> on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "It is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "All the <Z> <C> <M> <S>s but at least <OC> are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "At least <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_but_least", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "all_but_at_least"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are all the <Z> <C> <M> <S>s but at least <OC> on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "It is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "All the <Z> <C> <M> <S>s but at least <OC> are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "At least <OC> <Z> <C> <M> <S><so> <sa> not on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "whether_but_least", "kind": "object"}
      ],
      "constraints": [
        {"params": [2, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "all_but_at_least"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are most <Z> <C> <M> <S>s on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "Are most of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "Most <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "Most of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "type": "whether_most", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "most"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are most <Z> <C> <M> <S>s on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "Are most of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "Most <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "Most of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "type": "whether_most", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "most"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are more than <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "More than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that at most <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_more_than_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "more_than_fractions"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are more than <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "More than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that at most <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_more_than_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "more_than_fractions"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are fewer than <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "Fewer than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that at least <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_fewer_than_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "fewer_than_fractions"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are fewer than <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "Fewer than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that at least <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_fewer_than_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "fewer_than_fractions"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are at least <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "At least <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that fewer than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_at_least_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "at_least_fractions"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are at least <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "At least <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that fewer than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_at_least_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "at_least_fractions"],
      "type": ["existence1"]
  }
  ],
  [
    {
      "text": [
        "Are at most <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>?",
        "At most <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?",
        "It is not the case that more than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_at_most_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "at_most_fractions"],
      "type": ["existence1"]
  },
    {
      "text": [
        "Are at most <OP> of the <Z> <C> <M> <S>s on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane?",
        "At most <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?",
        "It is not the case that more than <OP> of the <Z> <C> <M> <S>s are on the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [2, 3], "value_inputs": ["<OP>"], "type": "whether_at_most_fractions", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "at_most_fractions"],
      "type": ["existence1"]
  }
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there any <Z2> <C2> <M2> <S2> that has the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is some <Z2> <C2> <M2> <S2> that has the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "some", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there any <Z2> <C2> <M2> <S2> that has the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is some <Z2> <C2> <M2> <S2> that has the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "some", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there any <Z2> <C2> <M2> <S2> that has the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is some <Z2> <C2> <M2> <S2> that has the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "some", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there any <Z2> <C2> <M2> <S2> that has the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is some <Z2> <C2> <M2> <S2> that has the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "some", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there any <Z2> <C2> <M2> <S2> that has the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is some <Z2> <C2> <M2> <S2> that has the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "some", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there any <Z2> <C2> <M2> <S2> that has the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is some <Z2> <C2> <M2> <S2> that has the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "some", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there any <Z2> <C2> <M2> <S2> that has the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is some <Z2> <C2> <M2> <S2> that has the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "some", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there any <Z2> <C2> <M2> <S2> that has the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is some <Z2> <C2> <M2> <S2> that has the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s are not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "type": "exist_some", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [3, 4], "type": "NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "some", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same size as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "exactly_number", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same color as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "exactly_number", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same material as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "exactly_number", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same shape as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "exactly_number", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same size as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "exactly_number", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same color as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "exactly_number", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same material as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "exactly_number", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but <OC> are not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but <OC> not the same shape as most <Z> <C> <M> <S>s?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_exact", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "exactly_number", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "between", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "between", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "between", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "between", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "between", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "between", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "between", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<OC2>", "<sa>", "<so>", "<sh>"], "type": "exist_between", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "between", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more than <OP> of the <Z2> <C2> <M2> <S2>s that have the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s have the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_more_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "more_than_fractions", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there fewer than <OP> of the <Z2> <C2> <M2> <S2>s that have the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s have the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OP>"], "type": "exist_fewer_than", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"}
        ],
        "quantifiers": ["each", "not_between", "fewer_than_fractions", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at most <OC> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> have the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_most", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at least <OC> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> have the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_but_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "all_but_at_least", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_most_number", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_most_number", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_most_number", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_most_number", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_most_number", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_most_number", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_most_number", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_most", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_most_number", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    [
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_least_number", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [3, 4], "type": "OUT_NEQ"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_least_number", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_least_number", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["not_between", "at_least_number", "most"],
        "type": ["compare_attr_shape"]
      }
    ],
    [
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same size as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same size as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same size as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["Z"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<Z>", "<Z2>"], "type": "NULL"},
          {"params": [4, 2, "Z"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_least_number", "most"],
        "type": ["compare_attr_size"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same color as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same color as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same color as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["C"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<C>", "<C2>"], "type": "NULL"},
          {"params": [4, 2, "C"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_least_number", "most"],
        "type": ["compare_attr_color"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same material as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same material as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same material as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["M"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<M>", "<M2>"], "type": "NULL"},
          {"params": [4, 2, "M"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_least_number", "most"],
        "type": ["compare_attr_material"]
      },
      {
        "text": [
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> that <sh> the same shape as most <Z> <C> <M> <S>s?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sh> the same shape as most <Z> <C> <M> <S>s; is it right?",
          "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not the same shape as most <Z> <C> <M> <S>s; is it right?"
        ],
        "nodes": [
          {"input_states": [], "type": "scene", "kind": "scene"},
          {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
          {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
          {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3, 2], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_multiple", "kind": "object"},
          {"input_states": [3], "value_inputs": ["S"], "type": "query_attribute_most", "kind": "object"},
          {"input_states": [5, 4, 2], "value_inputs": ["<OC>", "<sa>", "<so>", "<sh>"], "type": "exist_at_least", "kind": "object"}
        ],
        "constraints": [
          {"params": ["<S>", "<S2>"], "type": "NULL"},
          {"params": [4, 2, "S"], "type": "ATTR_NOT_CONTAIN"}
        ],
        "quantifiers": ["each", "not_between", "at_least_number", "most"],
        "type": ["compare_attr_shape"]
      }
    ]
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is the number of <Z> <C> <M> <S>s greater than the number of <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there are more <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, the number of <Z> <C> <M> <S>s is greater than the number of <Z2> <C2> <M2> <S2>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "more_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 4], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "more_A_than_B"],
      "type": ["compare_integer"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is the number of <Z> <C> <M> <S>s greater than the number of <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there are more <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, the number of <Z> <C> <M> <S>s is greater than the number of <Z2> <C2> <M2> <S2>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "more_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 4], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "more_A_than_B"],
      "type": ["compare_integer"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there fewer <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is the number of <Z> <C> <M> <S>s less than the number of <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there are fewer <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, the number of <Z> <C> <M> <S>s is less than the number of <Z2> <C2> <M2> <S2>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "fewer_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "fewer_A_than_B"],
      "type": ["compare_integer"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there fewer <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is the number of <Z> <C> <M> <S>s less than the number of <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there are fewer <Z> <C> <M> <S>s than <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, the number of <Z> <C> <M> <S>s is less than the number of <Z2> <C2> <M2> <S2>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "fewer_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "fewer_A_than_B"],
      "type": ["compare_integer"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there an equal number of <Z> <C> <M> <S>s and <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there the same number of <Z> <C> <M> <S>s and <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is the number of <Z> <C> <M> <S>s the same as the number of <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is an equal number of <Z> <C> <M> <S>s and <Z2> <C2> <M2> <S2>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "equal_A_and_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 4], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "equal_A_and_B"],
      "type": ["compare_integer"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there an equal number of <Z> <C> <M> <S>s and <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there the same number of <Z> <C> <M> <S>s and <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is the number of <Z> <C> <M> <S>s the same as the number of <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is an equal number of <Z> <C> <M> <S>s and <Z2> <C2> <M2> <S2>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type": "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "equal_A_and_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 4], "type": "OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "equal_A_and_B"],
      "type": ["compare_integer"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> greater than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there are more <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> is greater than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z3>", "<C3>", "<M3>", "<S3>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3, 4, 5], "value_inputs": ["<OR2>", "<Z4>", "<C4>", "<M4>", "<S4>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [4, 6], "type": "more_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 5], "type": "UNQ_EQ"},
        {"params": [6, 4], "type": "R_NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "more_A_than_B"],
      "type": ["compare_integer", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> greater than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there are more <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> is greater than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z3>", "<C3>", "<M3>", "<S3>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3, 4, 5], "value_inputs": ["<OR2>", "<Z4>", "<C4>", "<M4>", "<S4>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [4, 6], "type": "more_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 5], "type": "UNQ_EQ"},
        {"params": [6, 4], "type": "R_NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "more_A_than_B"],
      "type": ["compare_integer", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there fewer <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> less than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there are fewer <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> is less than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z3>", "<C3>", "<M3>", "<S3>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3, 4, 5], "value_inputs": ["<OR2>", "<Z4>", "<C4>", "<M4>", "<S4>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [4, 6], "type": "fewer_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 5], "type": "UNQ_EQ"},
        {"params": [4, 6], "type": "R_NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "fewer_A_than_B"],
      "type": ["compare_integer", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there fewer <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> less than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there are fewer <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> than <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> is less than the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z3>", "<C3>", "<M3>", "<S3>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3, 4, 5], "value_inputs": ["<OR2>", "<Z4>", "<C4>", "<M4>", "<S4>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [4, 6], "type": "fewer_A_than_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 5], "type": "UNQ_EQ"},
        {"params": [4, 6], "type": "R_NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "fewer_A_than_B"],
      "type": ["compare_integer", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there an equal number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> and <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there the same number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> and <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> the same as the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is an equal number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> and <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z3>", "<C3>", "<M3>", "<S3>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3, 4, 5], "value_inputs": ["<OR2>", "<Z4>", "<C4>", "<M4>", "<S4>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [4, 6], "type": "equal_A_and_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 5], "type": "UNQ_EQ"},
        {"params": [4, 6], "type": "R_OUT_NEQ"}
      ],
      "quantifiers": ["not_between", "equal_A_and_B"],
      "type": ["compare_integer", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there an equal number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> and <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there the same number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> and <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is the number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> the same as the number of <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is an equal number of <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S> and <Z4> <C4> <M4> <S4>s <OR2> the <Z3> <C3> <M3> <S3>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z3>", "<C3>", "<M3>", "<S3>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3, 4, 5], "value_inputs": ["<OR2>", "<Z4>", "<C4>", "<M4>", "<S4>"], "type": "relate_filter", "kind": "object"},
        {"input_states": [4, 6], "type": "equal_A_and_B", "kind": "object"}
      ],
      "constraints": [
        {"params": [3, 5], "type": "UNQ_EQ"},
        {"params": [4, 6], "type": "R_OUT_NEQ"}
      ],
      "quantifiers": ["each", "not_between", "equal_A_and_B"],
      "type": ["compare_integer", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that some <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, no <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "all_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "all"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that some <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, no <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "all_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "all"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is some <Z2> <C2> <M2> <S2> not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "not_all_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "not_all"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is some <Z2> <C2> <M2> <S2> not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "not_all_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "not_all"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, is there any <Z2> <C2> <M2> <S2> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "some_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "some"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, is there any <Z2> <C2> <M2> <S2> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "some_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "some"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there is no <Z2> <C2> <M2> <S2> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, no <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, every <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that some <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "no_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "no"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there is no <Z2> <C2> <M2> <S2> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, no <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, every <Z2> <C2> <M2> <S2> is not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that some <Z2> <C2> <M2> <S2> is <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "no_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "no"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there any but not all of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some but not all of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, whether some but not all of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "some_but_not_all_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "some_but_not_all"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there any but not all of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some but not all of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, whether some but not all of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple_valid_unlimited", "kind": "object"},
        {"input_states": [4], "type": "some_but_not_all_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "some_but_not_all"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "at_most_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "at_most_number"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at most <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "at_most_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "at_most_number"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "at_least_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "at_least_number"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "at_least_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "at_least_number"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there more than <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s but at most <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "more_than_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "more_than_number"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there more than <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s but at most <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "more_than_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "more_than_number"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there fewer than <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that all the <Z2> <C2> <M2> <S2>s but at least <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "fewer_than_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "fewer_than_number"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there fewer than <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that all the <Z2> <C2> <M2> <S2>s but at least <OC> are not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "fewer_than_number_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "fewer_than_number"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but <OC> are not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "exact_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "exactly_number"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, there <sa> exactly <OC> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but <OC> are not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "exact_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "exactly_number"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<OC2>", "<so>", "<sa>"], "type": "between_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "between"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, between <OC> and <OC2> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there <OC> to <OC2> <Z2> <C2> <M2> <S2><so> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so> <sa> <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<OC2>", "<so>", "<sa>"], "type": "between_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "between"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at most <OC> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at most <OC> are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "but_most_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "all_but_at_most"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at most <OC> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at most <OC> are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "but_most_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "all_but_at_most"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z2> <C2> <M2> <S2>s but at least <OC> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z2> <C2> <M2> <S2>s but at least <OC> are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "but_least_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "all_but_at_least"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z2> <C2> <M2> <S2>s but at least <OC> <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z2> <C2> <M2> <S2>s but at least <OC> are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z2> <C2> <M2> <S2><so> <sa> not <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [2, 3, 4], "value_inputs": ["<OC>", "<sa>", "<so>"], "type": "but_least_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "all_but_at_least"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are most of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are most <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, most of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, most <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "type": "most_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "most"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are most of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are most <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, most of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, most <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "type": "most_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "most"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are more than <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "more_than_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "more_than_fractions"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are more than <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "more_than_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "more_than_fractions"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there than <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "fewer_than_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "fewer_than_fractions"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are fewer than <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, fewer than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at least <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "fewer_than_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "fewer_than_fractions"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are at least <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "at_least_fractions_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "at_least_fractions"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are at least <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "at_least_fractions_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "at_least_fractions"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there at most <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at most <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that more than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that there are more than <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "at_most_fractions_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["not_between", "at_most_fractions"],
      "type": ["existence2", "spatial_relationship"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there at most <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at most <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that more than <OP> of the <Z2> <C2> <M2> <S2>s are <OR> the <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that there are more than <OP> of the <Z2> <C2> <M2> <S2>s <OR> the <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type": "filter_unique_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<OR>", "<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "relate_filter_multiple", "kind": "object"},
        {"input_states": [4], "value_inputs": ["<OP>"], "type": "at_most_fractions_fractions_relate", "kind": "object"}
      ],
      "constraints": [],
      "quantifiers": ["each", "not_between", "at_most_fractions"],
      "type": ["existence2", "spatial_relationship"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, no <Z> <C> <M> <S> is not larger than every <Z2> <C2> <M2> <S2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z> <C> <M> <S>s are larger than some <Z2> <C2> <M2> <S2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it’s not the case that some <Z> <C> <M> <S> is not larger than all the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it’s not the case that all the <Z2> <C2> <M2> <S2> is not smaller than some <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some <Z2> <C2> <M2> <S2> is smaller than all the <Z> <C> <M> <S>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z2> <C2> <M2> <S2> is smaller than all the <Z> <C> <M> <S>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "all_larger_some", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"},
        {"params": ["<C>", "<M>"], "type": "NOT_ALL_NULL"},
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "all", "some"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, no <Z> <C> <M> <S> is not larger than every <Z2> <C2> <M2> <S2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z> <C> <M> <S>s are larger than some <Z2> <C2> <M2> <S2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it’s not the case that some <Z> <C> <M> <S> is not larger than all the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it’s not the case that all the <Z2> <C2> <M2> <S2> is not smaller than some <Z> <C> <M> <S>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some <Z2> <C2> <M2> <S2> is smaller than all the <Z> <C> <M> <S>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z2> <C2> <M2> <S2> is smaller than all the <Z> <C> <M> <S>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "all_larger_some", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"},
        {"params": ["<C>", "<M>"], "type": "NOT_ALL_NULL"},
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "all", "some"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z> <C> <M> <S>s smaller than some but not all of the <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z> <C> <M> <S>s are smaller than some but not all of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some but not all of the <Z2> <C2> <M2> <S2>s are larger than all the <Z> <C> <M> <S>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "all_smaller_someButNotAll", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"},
        {"params": ["<C>", "<M>"], "type": "NOT_ALL_NULL"},
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "all", "some_but_not_all"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z> <C> <M> <S>s smaller than some but not all of the <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z> <C> <M> <S>s are smaller than some but not all of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some but not all of the <Z2> <C2> <M2> <S2>s are larger than all the <Z> <C> <M> <S>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "all_smaller_someButNotAll", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"},
        {"params": ["<C>", "<M>"], "type": "NOT_ALL_NULL"},
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "all", "some_but_not_all"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some <Z> <C> <M> <S> is larger than some but not all of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that no <Z> <C> <M> <S> is larger than some but not all of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, some but not all of the <Z2> <C2> <M2> <S2>s are smaller than some <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "some_larger_someButNotAll", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"},
        {"params": ["<C>", "<M>"], "type": "NOT_ALL_NULL"},
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["not_between", "some_but_not_all", "some"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some <Z> <C> <M> <S> is larger than some but not all of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that no <Z> <C> <M> <S> is larger than some but not all of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, some but not all of the <Z2> <C2> <M2> <S2>s are smaller than some <Z> <C> <M> <S>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_valid", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple_valid", "kind": "object"},
        {"input_states": [3, 4], "type": "some_larger_someButNotAll", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"},
        {"params": ["<C>", "<M>"], "type": "NOT_ALL_NULL"},
        {"params": [4, 3], "type": "NOT_CONTAIN"}
      ],
      "quantifiers": ["each", "not_between", "some_but_not_all", "some"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z> <C> <M> <S><so> smaller than exactly <OC2> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> smaller than exactly <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z> <C> <M> <S>s but at least <OC> are smaller than fewer or more than <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, exactly <OC2> <Z2> <C2> <M2> <S2><so2> <sa> larger than at least <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC2> <Z2> <C2> <M2> <S2><so2> larger than at least <OC> <Z> <C> <M> <S><so>?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OC2>", "<sa2>", "<so2>"], "type": "atLeastNum_smaller_exact", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["not_between", "at_least_number", "exactly_number"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z> <C> <M> <S><so> smaller than exactly <OC2> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> smaller than exactly <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z> <C> <M> <S>s but at least <OC> are smaller than fewer or more than <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, exactly <OC2> <Z2> <C2> <M2> <S2><so2> <sa> larger than at least <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC2> <Z2> <C2> <M2> <S2><so2> larger than at least <OC> <Z> <C> <M> <S><so>?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OC2>", "<sa2>", "<so2>"], "type": "atLeastNum_smaller_exact", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["each", "not_between", "at_least_number", "exactly_number"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there at least <OC> <Z> <C> <M> <S><so> larger than more than <OC2> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> larger than more than <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z> <C> <M> <S>s but at least <OC> are larger than at most <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than at least <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than at least <OC> <Z> <C> <M> <S><so>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OC2>", "<sa2>", "<so2>"], "type": "atLeastNum_larger_moreThanNumber", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["not_between", "at_least_number", "more_than_number"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there at least <OC> <Z> <C> <M> <S><so> larger than more than <OC2> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OC> <Z> <C> <M> <S><so> <sa> larger than more than <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z> <C> <M> <S>s but at least <OC> are larger than at most <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than at least <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than at least <OC> <Z> <C> <M> <S><so>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OC2>", "<sa2>", "<so2>"], "type": "atLeastNum_larger_moreThanNumber", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["each", "not_between", "at_least_number", "more_than_number"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are there more than <OP> of the <Z> <C> <M> <S>s larger than between <OC> and <OC2> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, more than <OP> of the <Z> <C> <M> <S>s are larger than between <OC> and <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that at most <OP> of the <Z> <C> <M> <S>s are larger than <OC> to <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than more than <OP> of the <Z> <C> <M> <S>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <OC> to <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than more than <OP> of the <Z> <C> <M> <S>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OP>", "<OC>", "<OC2>", "<sa2>", "<so2>"], "type": "moreThanFractions_larger_between", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["not_between", "more_than_fractions", "between"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are there more than <OP> of the <Z> <C> <M> <S>s larger than between <OC> and <OC2> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, more than <OP> of the <Z> <C> <M> <S>s are larger than between <OC> and <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that at most <OP> of the <Z> <C> <M> <S>s are larger than <OC> to <OC2> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> and at most <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than more than <OP> of the <Z> <C> <M> <S>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <OC> to <OC2> <Z2> <C2> <M2> <S2><so2> <sa2> smaller than more than <OP> of the <Z> <C> <M> <S>s; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OP>", "<OC>", "<OC2>", "<sa2>", "<so2>"], "type": "moreThanFractions_larger_between", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["each", "not_between", "more_than_fractions", "between"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, are all the <Z> <C> <M> <S>s but at least <OC> smaller than fewer than <OP> of the <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC> <Z> <C> <M> <S><so> <sa> smaller than at least <OP> of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all the <Z> <C> <M> <S>s but at least <OC> are smaller than fewer than <OP> of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OP> of the <Z2> <C2> <M2> <S2>s are larger than at least <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, it is not the case that fewer than <OP> of the <Z2> <C2> <M2> <S2>s are larger than at least <OC> <Z> <C> <M> <S><so>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OP>"], "type": "atLeastNum_smaller_atLeastFractions", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["not_between", "at_least_number", "at_least_fractions"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, are all the <Z> <C> <M> <S>s but at least <OC> smaller than fewer than <OP> of the <Z2> <C2> <M2> <S2>s?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC> <Z> <C> <M> <S><so> <sa> smaller than at least <OP> of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all the <Z> <C> <M> <S>s but at least <OC> are smaller than fewer than <OP> of the <Z2> <C2> <M2> <S2>s; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OP> of the <Z2> <C2> <M2> <S2>s are larger than at least <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, it is not the case that fewer than <OP> of the <Z2> <C2> <M2> <S2>s are larger than at least <OC> <Z> <C> <M> <S><so>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OP>"], "type": "atLeastNum_smaller_atLeastFractions", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["each", "not_between", "at_least_number", "at_least_fractions"],
      "type": ["compare_size"]
    }
  ],
  [
    {
      "text": [
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, <sa> there exactly <OC> <Z> <C> <M> <S><so> smaller than between <OC2> and <OC3> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, exactly <OC> <Z> <C> <M> <S><so> <sa> smaller than between <OC2> and <OC3> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, all <Z> <C> <M> <S>s but <OC> are smaller than fewer than <OC2> or more than <OC3> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, between <OC2> and <OC3> <Z2> <C2> <M2> <S2><so2> <sa2> larger than exactly <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> plane where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop>, at least <OC2> and at most <OC3> <Z2> <C2> <M2> <S2><so2> <sa2> larger than exactly <OC> <Z> <C> <M> <S><so>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_unique_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OC2>", "<OC3>", "<sa2>", "<so2>"], "type": "exact_smaller_between", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["not_between", "exactly_number", "between"],
      "type": ["compare_size"]
    },
    {
      "text": [
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, <sa> there exactly <OC> <Z> <C> <M> <S><so> smaller than between <OC2> and <OC3> <Z2> <C2> <M2> <S2><so2>?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, exactly <OC> <Z> <C> <M> <S><so> <sa> smaller than between <OC2> and <OC3> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, all <Z> <C> <M> <S>s but <OC> are smaller than fewer than <OC2> or more than <OC3> <Z2> <C2> <M2> <S2><so2>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, between <OC2> and <OC3> <Z2> <C2> <M2> <S2><so2> <sa2> larger than exactly <OC> <Z> <C> <M> <S><so>; is it right?",
        "On the <PC> <PM> <PS> planes where there <sap> not between <OCP> and <OCP2> <ZP> <CP> <MP> <SP><sop> on each plane, at least <OC2> and at most <OC3> <Z2> <C2> <M2> <S2><so2> <sa2> larger than exactly <OC> <Z> <C> <M> <S><so>; is it right?"
      ],
      "nodes": [
        {"input_states": [], "type": "scene", "kind": "scene"},
        {"input_states": [0], "value_inputs": ["<PC>", "<PM>", "<PS>"], "type": "filter_multiple", "kind": "plane"},
        {"input_states": [1], "value_inputs": ["<OCP>", "<OCP2>", "<ZP>", "<CP>", "<MP>", "<SP>", "<sop>", "<sap>"], "type": "not_contain_between_multiple_filter", "kind": "plane"},
        {"input_states": [2], "value_inputs": ["<Z>", "<C>", "<M>", "<S>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3], "value_inputs": ["<Z2>", "<C2>", "<M2>", "<S2>"], "type":  "filter_multiple", "kind": "object"},
        {"input_states": [3, 4], "value_inputs": ["<OC>", "<sa>", "<so>", "<OC2>", "<OC3>", "<sa2>", "<so2>"], "type": "exact_smaller_between", "kind": "object"}
      ],
      "constraints": [
        {"params": ["<S>", "<S2>"], "type": "NOT_NULL"},
        {"params": ["<Z>", "<Z2>"], "type": "BOTH_SIZE_BUT_NULL"},
        {"params": ["<S>", "<S2>"], "type": "EQ"}
      ],
      "quantifiers": ["each", "not_between", "exactly_number", "between"],
      "type": ["compare_size"]
    }
  ]
]